@page "/aves-editar/{volador}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager



<h3>Aves</h3>

<EditForm Model="@ave" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col">
            <label for="Nombre">Nombre Propio </label>
            <InputText id="Nombre" @bind-Value="ave.Nombre" class="form-control" />
            <ValidationMessage For="() => ave.Nombre" />
        </div>
        <div class="col">
            <label for="Especie">Especie</label>
            <InputText id="Apellido" @bind-Value="ave.Especie" class="form-control" />
            <ValidationMessage For="() => ave.Especie" />

        </div>
    </div>
    <div class="row">
        <div class="col-2">
            <label for="Alimentacion">Alimentacion</label>
            <InputText id="Alimentacion" @bind-Value="ave.Alimentacion" class="form-control" />
        </div>
        <div class="col-8">
            <label for="TdeVida">Tiempo de Vida</label>
            <InputText id="TdeVida" @bind-Value="ave.TdeVida" class="form-control" />
        </div>
        <div class="col-2">
            <label for="Volador">Puede Volar</label>
            <InputText id="Volador" @bind-Value="ave.Volador" class="form-control" />

        </div>
        <div class="col-2">
            <label for="PeriodoIncub">Periodo de Incubacion</label>
            <InputText id="PeriodoIncub" @bind-Value="ave.PeriodoIncub" class="form-control" />

        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public string volador { get; set;  }
    private Aves ave = new Aves();
    List<Aves> aves = new List<Aves>();


    protected async Task Guardar()
    {

        await localStorage.SetItemAsync("aves", aves);

        NavigationManager.NavigateTo("/aves-crear");

    }

    protected override async Task OnInitializedAsync()
    {   //La primera vez que se corre poner en comentarios, pues como no existen datos
        //convierta la lista catedraticos en null
        aves = await localStorage.GetItemAsync<List<Aves>>("aves");
        
        ave = aves.Find(c => c.Volador == volador);
    }

}
